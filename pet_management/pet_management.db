from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

# Cấu hình cơ sở dữ liệu SQLite
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///pet_management.db'  # Đường dẫn đến cơ sở dữ liệu SQLite
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False  # Tắt cảnh báo

# Khởi tạo đối tượng SQLAlchemy
db = SQLAlchemy(app)

# Mô hình cơ sở dữ liệu
class Booking(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    pet_name = db.Column(db.String(100), nullable=False)
    owner_name = db.Column(db.String(100), nullable=False)
    status = db.Column(db.String(50), default='Active')

class Pet(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    pet_name = db.Column(db.String(100), nullable=False)
    pet_type = db.Column(db.String(100), nullable=False)

class Schedule(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    pet_name = db.Column(db.String(100), nullable=False)
    doctor_name = db.Column(db.String(100), nullable=False)
    time_slot = db.Column(db.String(50), nullable=False)

class Room(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    room_name = db.Column(db.String(100), nullable=False)
    room_type = db.Column(db.String(50), nullable=False)
    capacity = db.Column(db.Integer, nullable=False)

# Tạo bảng trong cơ sở dữ liệu (nếu chưa tồn tại)
with app.app_context():
    db.create_all()

# Trang chủ
@app.route('/')
def index():
    return render_template('index.html')

# Quản lý thông tin booking
@app.route('/bookings', methods=['GET', 'POST'])
def bookings():
    if request.method == 'POST':
        pet_name = request.form['pet_name']
        owner_name = request.form['owner_name']
        status = 'Active'  # Trạng thái mặc định là "Active"
        new_booking = Booking(pet_name=pet_name, owner_name=owner_name, status=status)
        db.session.add(new_booking)
        db.session.commit()
        return redirect(url_for('bookings'))  # Quay lại trang bookings sau khi thêm

    bookings = Booking.query.all()
    return render_template('bookings.html', bookings=bookings)

# Quản lý thông tin chuồng
@app.route('/rooms', methods=['GET', 'POST'])
def rooms():
    if request.method == 'POST':
        room_name = request.form['room_name']
        room_type = request.form['room_type']
        capacity = request.form['capacity']
        new_room = Room(room_name=room_name, room_type=room_type, capacity=capacity)
        db.session.add(new_room)
        db.session.commit()
        return redirect(url_for('rooms'))

    rooms = Room.query.all()
    return render_template('rooms.html', rooms=rooms)

# Quản lý thông tin thú cưng
@app.route('/pets', methods=['GET', 'POST'])
def pets():
    if request.method == 'POST':
        pet_name = request.form['pet_name']
        pet_type = request.form['pet_type']
        new_pet = Pet(pet_name=pet_name, pet_type=pet_type)
        db.session.add(new_pet)
        db.session.commit()
        return redirect(url_for('pets'))

    pets = Pet.query.all()
    return render_template('pets.html', pets=pets)

# Quản lý lịch khám bác sĩ thú y
@app.route('/schedule', methods=['GET', 'POST'])
def schedule():
    if request.method == 'POST':
        pet_name = request.form['pet_name']
        doctor_name = request.form['doctor_name']
        time_slot = request.form['time_slot']
        new_schedule = Schedule(pet_name=pet_name, doctor_name=doctor_name, time_slot=time_slot)
        db.session.add(new_schedule)
        db.session.commit()
        return redirect(url_for('schedule'))

    schedule = Schedule.query.all()
    return render_template('schedule.html', schedule=schedule)

if __name__ == '__main__':
    app.run(debug=True)
